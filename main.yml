---
- hosts: 127.0.0.1
  connection: local
  # vars: ** see group_vars **
  roles:
    - pacman
    # - desktop-background
  tasks:

    # - name: ckb (corsair keyboard)
    #   block:
    #     # ckb is the linux daemon for corsair keyboards
    #     - name: See if ckb is installed
    #       shell: "pacman -Qemq | grep -c ckb-next"
    #       register: ckb
    #     - name: ckb-next
    #       when: ckb.stdout == "1"
    #       systemd:
    #         name: ckb-next-daemon
    #         state: started
    #         enabled: yes

        
    - name: Docker
      become: true
      block:
        - name: Create docker usergroup
          group:
            name: docker
            state: present
        - name: Add user to docker group
          # so that we don't have to type sudo every time we use docker
          user:
            name: "{{local_user}}"
            groups: docker
            append: yes
        - name: Start/Enable docker service
          systemd:
            name: docker
            state: started
            enabled: yes
    - name: NodeJS 
      become: false
      block:
        - name: install Node with NVM
          shell: |
            echo $USER
            . /home/{{local_user}}/.nvm/nvm.sh
            node_version=$(</home/{{local_user}}/.nvmrc)
            nvm install $node_version
        - name: install npm packages
          npm:
            name: "{{item}}"
            global: yes
          with_items:
            - tern
    - name: Python packages
      become: false
      pip:
        name: 
          - pip
          - awscli
          - polybar-reload
        extra_args: --user
    - name: Install Vundle
      become: false
      git:
        repo: "https://github.com/VundleVim/Vundle.vim.git"
        dest: "/home/{{local_user}}/.vim/bundle/Vundle.vim"
    - name: See if yadm has a repo cloned.
      stat:
        path: "/home/{{local_user}}/.yadm/repo.git"
      register: yadm_repo
    - name: Set yadm remote to .ssh
      become: false
      shell: "yadm remote set-url origin {{yadm_repo_path}}"
      when: yadm_repo.stat.exists == false and yadm_repo.stat.isdir == false
    # - name: See if spacemacs is installed.
    #   stat:
    #     path: "/home/{{local_user}}/.emacs.d"
    #   register: spacemacs_repo
    # - name: Remove ~/.emacs.d
    #   become: false
    #   file:
    #     path: "/home/{{local_user}}/.emacs.d"
    #     state: absent
    #   when: spacemacs_repo.stat.exists == false and spacemacs_repo.stat.isdir == false
    # - name: Install Spacemacs
    #   become: false
    #   git:
    #     repo: "https://github.com/syl20bnr/spacemacs"
    #     dest: "/home/{{local_user}}/.emacs.d"
    #     version: develop
    - name: Install go packages
      become: false
      shell: "go get -u -v {{item}}"
      with_items:
        # needed for spacemacs go layer
        # https://github.com/syl20bnr/spacemacs/tree/master/layers/%2Blang/go
        - "github.com/nsf/gocode"
        - "github.com/rogpeppe/godef"
        - "golang.org/x/tools/cmd/guru"
        - "golang.org/x/tools/cmd/gorename"
        - "golang.org/x/tools/cmd/goimports"
        # needed for guru -> import/add dependencies (spacemacs go layer)
        - "github.com/uudashr/gopkgs/cmd/gopkgs"
        # needed for dotfiles
        - "github.com/itchyny/volume-go/cmd/volume"
        - "github.com/patrick-motard/dot"
    # - name: Update all existing golang packages
    #   become: false
    #   shell: go get -u all

